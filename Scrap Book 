 #SCRAP BOOK

X <- (x == T)

 if (X == T ) {
      
    print(h5("Tribute"))
    print("hello")
       
    } else {
    
    print("This isn't the greatest song in the world. This is just a tribute!")}
    
    
    
    
 if (is.null(data())) {
      
    uiOutput("lp")
       
    } else {
    
    uiOutput("tb")
    
    }   
    
    
X <- c(1,2,3,4,5,6,7,8,9,10)
Y <- c(2,4,6,8,10,12,14,16,18,20)
    
testData <- data.frame(X,Y, stringsAsFactors=F)  
    
  
  pK <- 
  
  rise / run = change in Y / change in x 
  
  median(data$Y) - data[1,2]
  median(data$X) - data[1,1]
  
  
  headers <- colnames(data)
  Xhd <- headers[1]
  Yhd <- headers[2]
  paste(c(data$,Yhd), collapse="")
  
  rise <- floor((length(data$Y))*(1/2)) - data[1,2]
  run <- floor((length(data$X))*(1/2)) - data[1,1]
  pK <- rise/run
  

#Finally fixing the lang formula error
  
langFormula <- as.formula(Y ~ (Q*k*X)/(1+(k*X))

Lang <- nls(formula = langFormula,  data = data, start = list(Q = 3000, k = 0.01),algorith = "port")


    
   
   
langFormula <- reactive({langFormula <- as.formula(Y ~ (Q*k*X)/1+(k*X))})

#Doesn't work
lang <- reactive({lang <- nls(formula = langFormula(),  data = data(), start = list(Q = pQmax(), k = 0.01), algorith = "port")})  
 
#Works  
lang <- reactive({lang <- nls(formula = Y ~ (Q*k*X)/(1+(k*X)),  data = data(), start = list(Q = pQmax(), k = 0.01), algorith = "port")})  

 
 
 
 loess_fit <- loess(Y ~ X, data)
 plot(data)
 lines(data$X, predict(loess_fit), col = "blue")
 
 px <- predict(loess_fit)
 
 #Predicting  K =pK
 
 a <- data$X / data$Y
 b <- (data$X)^2
 c <- data$X
 d <- a*c
 e <- length(d)
 
 sa <- sum(a)
 sb <- sum(b)
 sc <- sum(c)
 sd <- sum(d)
 
 a <- sa
 b <- sb
 c <- sc
 d <- sd
 
 pK <- 1 / ((((a*b)-(c*d))/((e*b)-((c)^2)))*pQmax)
 
 if(pK < 0) {pK <- 0.01}
 
 
 # Goodness of Fit Statistic ( E )
 
 f <- (data$Y - mean(data$Y))^2
 sf <- sum(f)
 f <- sf
 
 
 g <- (data$Y - predict(Lang))^2
 sg <- sum(g)
 g <- sg
 
 E <- (1 - (g/f))
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    